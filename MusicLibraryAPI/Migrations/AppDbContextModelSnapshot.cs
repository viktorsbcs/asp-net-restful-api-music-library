// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicLibraryAPI.DbContexts;

namespace MusicLibraryAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MusicLibraryAPI.Model.Album", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AlbumCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ArtistId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ReleaseYear")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AlbumCategoryId");

                    b.HasIndex("ArtistId");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("MusicLibraryAPI.Model.Artist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ArtistName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("MusicLibraryAPI.Model.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("64343407-b591-49f9-beb5-c6bb380c1749"),
                            CategoryName = "Rock"
                        },
                        new
                        {
                            Id = new Guid("022080c0-6632-4195-b30e-2a507b13a9f6"),
                            CategoryName = "Metal"
                        },
                        new
                        {
                            Id = new Guid("c2d56961-4346-44af-9bb9-3602e5883726"),
                            CategoryName = "Pop"
                        },
                        new
                        {
                            Id = new Guid("c34fa00c-2508-4865-a441-10b52c0fe567"),
                            CategoryName = "Classic"
                        });
                });

            modelBuilder.Entity("MusicLibraryAPI.Model.Track", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AlbumId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("TrackDuration")
                        .HasColumnType("time");

                    b.Property<string>("TrackTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("MusicLibraryAPI.Model.Album", b =>
                {
                    b.HasOne("MusicLibraryAPI.Model.Category", "AlbumCategory")
                        .WithMany()
                        .HasForeignKey("AlbumCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MusicLibraryAPI.Model.Artist", null)
                        .WithMany("AlbumList")
                        .HasForeignKey("ArtistId");
                });

            modelBuilder.Entity("MusicLibraryAPI.Model.Track", b =>
                {
                    b.HasOne("MusicLibraryAPI.Model.Album", null)
                        .WithMany("TrackList")
                        .HasForeignKey("AlbumId");
                });
#pragma warning restore 612, 618
        }
    }
}
